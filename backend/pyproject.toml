[tool.poetry]
name = "codorch-backend"
version = "0.2.0"
description = "Codorch Backend - AI-Powered Business Orchestration Platform"
authors = ["Codorch Team"]
readme = "README.md"
packages = [{include = "backend"}]

[tool.poetry.dependencies]
python = ">=3.11,<3.14"
fastapi = "^0.118.0"
pyyaml = ">=6.0"
packaging = ">=23.0"
graphviz = ">=0.21,<0.22"
rustworkx = "^0.17.1"
uvicorn = {extras = ["standard"], version = "^0.37.0"}
sqlalchemy = "^2.0.27"
alembic = "^1.16.5"
psycopg2-binary = "^2.9.9"
pydantic = "^2.11.9"
pydantic-ai = "^1.0.13"
pydantic-ai-slim = "^1.0.13"
prefect = "^3.4.20"
redis = "^6.4.0"
python-jose = {extras = ["cryptography"], version = "^3.5.0"}
passlib = {extras = ["bcrypt"], version = "^1.7.4"}
python-dotenv = "^1.1.1"
openai = "^2.0.1"
httpx = "^0.28.1"
python-multipart = "^0.0.20"
websockets = "^15.0.1"
pydantic-settings = "^2.11.0"
starlette = "^0.48.0"

[tool.poetry.group.dev.dependencies]
pytest = "^8.4.2"
pytest-cov = "^7.0.0"
pytest-asyncio = "^1.2.0"
pytest-mock = "^3.15.1"
ruff = "^0.13.2"
mypy = "^1.8.0"
black = "^25.9.0"
pre-commit = "^4.3.0"
httpx = "^0.28.1"

[tool.ruff]
line-length = 120
target-version = "py311"
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]  # imported but unused

[tool.black]
line-length = 120
target-version = ['py311']

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_any_unimported = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
check_untyped_defs = true
strict_equality = true

[[tool.mypy.overrides]]
module = "refmemtree.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "prefect.*"
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.4.2"
addopts = "-ra -q --strict-markers --cov=backend --cov-report=term-missing --cov-report=html"
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
asyncio_mode = "auto"

[tool.coverage.run]
source = ["backend"]
omit = ["*/tests/*", "*/__init__.py", "*/migrations/*"]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false
fail_under = 80

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
