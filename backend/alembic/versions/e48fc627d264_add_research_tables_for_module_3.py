"""add research tables for module 3

Revision ID: e48fc627d264
Revises: e6006195c986
Create Date: 2025-09-30 02:20:17.366702

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "e48fc627d264"
down_revision: Union[str, None] = "e6006195c986"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "research_sessions",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("project_id", sa.UUID(), nullable=False),
        sa.Column("goal_id", sa.UUID(), nullable=True),
        sa.Column("opportunity_id", sa.UUID(), nullable=True),
        sa.Column("tree_node_id", sa.UUID(), nullable=True),
        sa.Column("title", sa.String(length=255), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("status", sa.String(length=50), nullable=False),
        sa.Column("context_summary", sa.JSON(), nullable=True, comment="Aggregated context from RefMemTree"),
        sa.Column("created_by", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["created_by"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(["goal_id"], ["goals.id"], ondelete="SET NULL"),
        sa.ForeignKeyConstraint(["opportunity_id"], ["opportunities.id"], ondelete="SET NULL"),
        sa.ForeignKeyConstraint(["project_id"], ["projects.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["tree_node_id"], ["tree_nodes.id"], ondelete="SET NULL"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "research_findings",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("session_id", sa.UUID(), nullable=False),
        sa.Column("finding_type", sa.String(length=50), nullable=False),
        sa.Column("title", sa.String(length=255), nullable=False),
        sa.Column("description", sa.Text(), nullable=False),
        sa.Column("sources", sa.JSON(), nullable=True),
        sa.Column("confidence_score", sa.Float(), nullable=True, comment="AI confidence in finding (0-1)"),
        sa.Column("relevance_score", sa.Float(), nullable=True, comment="Relevance to research context (0-1)"),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(["session_id"], ["research_sessions.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "research_messages",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("session_id", sa.UUID(), nullable=False),
        sa.Column("role", sa.String(length=20), nullable=False),
        sa.Column("content", sa.Text(), nullable=False),
        sa.Column("message_metadata", sa.JSON(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(["session_id"], ["research_sessions.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.drop_index(op.f("ix_goals_project_id"), table_name="goals")
    op.drop_index(op.f("ix_opportunities_project_id"), table_name="opportunities")
    op.add_column("projects", sa.Column("current_stage", sa.String(length=50), nullable=True))
    op.add_column("projects", sa.Column("tree_snapshot", sa.JSON(), nullable=True))
    op.alter_column("projects", "goal", existing_type=sa.TEXT(), nullable=False)
    op.drop_index(op.f("ix_projects_created_by"), table_name="projects")
    op.drop_constraint(op.f("projects_created_by_fkey"), "projects", type_="foreignkey")
    op.create_foreign_key(None, "projects", "users", ["created_by"], ["id"])
    op.add_column("tree_nodes", sa.Column("data", sa.JSON(), nullable=False))
    op.add_column("tree_nodes", sa.Column("position", sa.Integer(), nullable=True))
    op.add_column("tree_nodes", sa.Column("level", sa.Integer(), nullable=True))
    op.add_column("tree_nodes", sa.Column("path", sa.Text(), nullable=True))
    op.drop_index(op.f("ix_tree_nodes_parent_id"), table_name="tree_nodes")
    op.drop_index(op.f("ix_tree_nodes_project_id"), table_name="tree_nodes")
    op.drop_column("tree_nodes", "embedding")
    op.drop_column("tree_nodes", "metadata")
    op.drop_column("tree_nodes", "content")
    op.add_column("users", sa.Column("username", sa.String(length=100), nullable=False))
    op.create_index(op.f("ix_users_username"), "users", ["username"], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_users_username"), table_name="users")
    op.drop_column("users", "username")
    op.add_column(
        "tree_nodes", sa.Column("content", postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True)
    )
    op.add_column(
        "tree_nodes", sa.Column("metadata", postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True)
    )
    op.add_column("tree_nodes", sa.Column("embedding", postgresql.BYTEA(), autoincrement=False, nullable=True))
    op.create_index(op.f("ix_tree_nodes_project_id"), "tree_nodes", ["project_id"], unique=False)
    op.create_index(op.f("ix_tree_nodes_parent_id"), "tree_nodes", ["parent_id"], unique=False)
    op.drop_column("tree_nodes", "path")
    op.drop_column("tree_nodes", "level")
    op.drop_column("tree_nodes", "position")
    op.drop_column("tree_nodes", "data")
    op.drop_constraint(op.f("projects_created_by_fkey"), "projects", type_="foreignkey")
    op.create_foreign_key(
        op.f("projects_created_by_fkey"), "projects", "users", ["created_by"], ["id"], ondelete="CASCADE"
    )
    op.create_index(op.f("ix_projects_created_by"), "projects", ["created_by"], unique=False)
    op.alter_column("projects", "goal", existing_type=sa.TEXT(), nullable=True)
    op.drop_column("projects", "tree_snapshot")
    op.drop_column("projects", "current_stage")
    op.create_index(op.f("ix_opportunities_project_id"), "opportunities", ["project_id"], unique=False)
    op.create_index(op.f("ix_goals_project_id"), "goals", ["project_id"], unique=False)
    op.drop_table("research_messages")
    op.drop_table("research_findings")
    op.drop_table("research_sessions")
    # ### end Alembic commands ###
