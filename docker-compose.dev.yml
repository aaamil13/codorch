version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: codorch-postgres-dev
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: codorch_dev
    ports:
      - "5432:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: codorch-redis-dev
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: docker/Dockerfile.backend
    container_name: codorch-backend-dev
    ports:
      - "8000:8000"
    environment:
      - ENV_FILE=.env.dev
    volumes:
      - ./backend:/app/backend
      - ./config/.env.dev:/app/.env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: uvicorn backend.main:app --host 0.0.0.0 --port 8000 --reload

  frontend:
    build:
      context: .
      dockerfile: docker/Dockerfile.frontend
    container_name: codorch-frontend-dev
    ports:
      - "9000:9000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: quasar dev
    depends_on:
      - backend

volumes:
  postgres_dev_data:
  redis_dev_data:
